name: Initial Infrastructure Setup

on:
  workflow_dispatch:

jobs:
  setup_infrastructure:
    runs-on: ubuntu-latest
    outputs:
      resource_group_name: ${{ steps.setup.outputs.resource_group_name }}
      storage_account_name: ${{ steps.setup.outputs.storage_account_name }}
      access_key: ${{ steps.setup.outputs.access_key }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest

      - name: Terraform Initialize
        run: terraform init
        working-directory: ./Terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Plan
        run: terraform plan -var="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" -var="location=${{ secrets.LOCATION }}" -out=tfplan
        working-directory: ./Terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./Terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Output
        id: setup
        run: terraform output -json
        working-directory: ./Terraform
        continue-on-error: true
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Create Outputs JSON
        run: |
          echo '{"resource_group_name": "${{ steps.setup.outputs.resource_group_name }}", "storage_account_name": "${{ steps.setup.outputs.storage_account_name }}", "access_key": "${{ steps.setup.outputs.access_key }}"}' > terraform-outputs.json

      - name: List Current Directory Contents
        run: |
          pwd
          ls -lah

      - name: Upload Terraform Outputs as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: terraform-outputs
          path: terraform-outputs.json
