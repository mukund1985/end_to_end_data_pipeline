name: Initial Infrastructure Setup

on:
  workflow_dispatch:
    inputs:
      resource_group_name:
        description: 'The name of the Resource Group'
        required: true
      location:
        description: 'The location of the Azure resources'
        required: true
      container_name:
        description: 'The name of the container within the storage account'
        required: true
      storage_account_name:
        description: 'The name of the storage account'
        required: true

jobs:
  setup_infrastructure:
    runs-on: ubuntu-latest
    outputs:
      resource_group_name: ${{ steps.setup.outputs.resource_group_name }}
      storage_account_name: ${{ steps.setup.outputs.storage_account_name }}
      access_key: ${{ steps.setup.outputs.access_key }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest

      - name: Terraform Initialize
        run: terraform init
        working-directory: ./Terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Plan
        run: terraform plan -var="resource_group_name=${{ github.event.inputs.resource_group_name }}" -var="location=${{ github.event.inputs.location }}" -var="container_name=${{ github.event.inputs.container_name }}" -var="storage_account_name=${{ github.event.inputs.storage_account_name }}" -out=tfplan
        working-directory: ./Terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./Terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Output
        id: setup
        run: terraform output -json
        working-directory: ./Terraform
        continue-on-error: true
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: List Current Directory Contents
        run: |
          pwd
          ls -lah
