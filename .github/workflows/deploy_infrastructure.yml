name: Deploy Infrastructure

on:
  push:
    branches:
      - main
    paths:
      - 'Terraform/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ./Terraform

      - name: Terraform Init
        env: # Set environment variables for the Azure provider
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        run: terraform init
        working-directory: ./Terraform

      - name: Terraform Plan
        env: # Set environment variables for the Azure provider
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        run: terraform plan -var 'resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}' -var 'location=${{ secrets.LOCATION }}'
        working-directory: ./Terraform

      - name: Terraform Apply
        env: # Set environment variables for the Azure provider
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        run: terraform apply -auto-approve -var 'resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}' -var 'location=${{ secrets.LOCATION }}'
        working-directory: ./Terraform
